/*ckwg +29
 * Copyright 2015-2016 by Kitware, Inc.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 *  * Redistributions of source code must retain the above copyright notice,
 *    this list of conditions and the following disclaimer.
 *
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 *  * Neither name of Kitware, Inc. nor the names of any contributors may be used
 *    to endorse or promote products derived from this software without specific
 *    prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ``AS IS''
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHORS OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/**
 * \file
 *
 * \brief Macros and symbols needed to adapt to current system.
 *
 */

///////////////////////////////////////////////////////////////////////////////////////////////
////// Do not edit this file. It is generated by CMake. All local changes will be lost. ///////
///////////////////////////////////////////////////////////////////////////////////////////////

#ifndef VITAL_VITAL_CONFIG_H
#define VITAL_VITAL_CONFIG_H

// Support macros.
#if defined(_WIN32) || defined(_WIN64)

# define VITAL_NO_RETURN __declspec(noreturn)
# define VITAL_MUST_USE_RESULT  /* unsupported */
# define VITAL_UNUSED           /* unsupported */
# define VITAL_SYSTEM_WIN_API (1)

#elif defined(__GNUC__)

# define VITAL_NO_RETURN __attribute__((__noreturn__))
# define VITAL_MUST_USE_RESULT __attribute__((__warn_unused_result__))
# define VITAL_UNUSED __attribute__((__unused__))
# define VITAL_SYSTEM_WIN_API (0)

#else

# define VITAL_NO_RETURN        /* unsupported */
# define VITAL_MUST_USE_RESULT  /* unsupported */
# define VITAL_UNUSED           /* unsupported */
# define VITAL_SYSTEM_WIN_API (0)

#endif


#cmakedefine01  VITAL_USE_CPP_AUTO
#cmakedefine01  VITAL_USE_CPP_RANGE_FOR
#cmakedefine01  VITAL_USE_CPP_DEFAULT_CTOR
#cmakedefine01  VITAL_USE_CPP_NOEXCEPT
#cmakedefine01  VITAL_USE_CPP_FINAL
#cmakedefine01  VITAL_USE_CPP_CONSTEXPR

#cmakedefine01  VITAL_USE_STD_CHRONO
#cmakedefine01  VITAL_USE_STD_RANDOM
#cmakedefine01  VITAL_USE_STD_NULLPTR

#cmakedefine01  VITAL_USE_ABI_DEMANGLE
#cmakedefine  VITAL_STD_MAP_UNIQUE_PTR_ALLOWED

#if VITAL_USE_CPP_NOEXCEPT
  #define VITAL_NOTHROW noexcept
#else
  #define VITAL_NOTHROW throw()
#endif

#if VITAL_USE_CPP_FINAL
  #define VITAL_FINAL final
#else
  #define VITAL_FINAL
#endif

#if VITAL_USE_CPP_CONSTEXPR
  #define VITAL_CONSTEXPR constexpr
#else
  #define VITAL_CONSTEXPR const
#endif

#if VITAL_USE_CPP_DEFAULT_CTOR // also DTOR
  #define VITAL_DEFAULT_CTOR = default;
  #define VITAL_DEFAULT_DTOR = default;
  #define VITAL_DELETE_DECL = delete
#else
  #define VITAL_DEFAULT_CTOR {}
  #define VITAL_DEFAULT_DTOR {}
  #define VITAL_DELETE_DECL /* nothing */
#endif

#endif // VITAL_VITAL_CONFIG_H
